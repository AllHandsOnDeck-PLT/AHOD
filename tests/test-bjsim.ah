int i
series<Card> deck
int score 
Player player
when do void INIT():
{ 
    player = Player("Stephen", 0) 
    do PRINT("Hello, and welcome to our Blackjack Simulator")
    do PRINT("First things first let us welcome our player for the evening") 
    do PRINT(player.name) 
    deck = [Card("R6", true,6)]
    deck = do CREATEDECK(deck)
}
when do string COMMENT(int x):
{
    string localquip 
    if x > 6 :
    {
        localquip = "That is a high value card"
    }
    else:
    {
        localquip = "That is a low value card"
    }
    return localquip
} 
when do series<Card> CREATEDECK(series<Card> deck):
{ 
    series<string> types
    series<int> values 
    int value
    string type 
    Card card
    types = ["R5", "R9", "B9", "B2", "R3"]
    values = [3, 9, 9, 2, 3]
    for (i = 0; i < types.size(); i = i + 1):
    {
        type = types[i]
        value = values[i]
        card = Card(type, true,value)   
        deck.push(card) 
    }
    return deck
} 
main:
{
    Card card
    int currvalue
    string quip
    do INIT() 
    do PRINT("There are 5 cards in the hand. A Hit Request")
    card = deck[deck.size()-1]
    score = 0 
    do PRINT("Card:")
    do PRINT(card.type)
    do PRINT("Current Score of:")
    score = score + card.value
    do PRINT(score)
    deck.pop()
    do PRINT("Another hit request")
    card = deck[deck.size()-1] 
    do PRINT("Card:")
    do PRINT(card.type)
    do PRINT("Current Score of:")
    score = score + card.value
    do PRINT(score)
    deck.pop()
    do PRINT("Looks like we stop here for tonight. Time to see what the next cards were")
    for (i = 0 ; i < deck.size(); i = i + 1):
    {
        card = deck[i]
        do PRINT("Card:")
        do PRINT(card.type)
        score = score + card.value
        quip = do COMMENT(score)
        do PRINT(quip)
        if score<21 :
        {
        do PRINT("Could have had a higher score of: ")
        do PRINT(score)
        }
        else:
        {
        do PRINT("Good that you stopped otherwise you would have a score of: ")
        do PRINT(score)
        }
    }
}

