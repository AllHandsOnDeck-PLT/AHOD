   0  $accept : %entry% $end

   1  program : decls EOF

   2  decls :
   3        | decls main_decl
   4        | decls class_decl
   5        | decls action_decl
   6        | decls helper_decl
   7        | decls attr_decl

   8  main_decl : MAIN COLON stmt_block

   9  class_decl : LET BE class_block
  10             | params_list args_list

  11  action_decl : WHEN DO

  12  helper_decl : ID COLON

  13  attr_decl : CONST typ COLON

  14  stmt_block : LBRACE stmt RBRACE

  15  class_block : LPAREN RPAREN

  16  typ : typ prim_typ
  17      | typ clas
  18      | typ template_class

  19  prim_typ : INT
  20           | FLOAT
  21           | BOOL

  22  clas : OBJECT

  23  template_class : STICK typ STICK

  24  param : typ ID

  25  params_list : param

  26  arg : ID expr

  27  args_list : arg

  28  stmt : RETURN expr
  29       | stmt ID ASSIGN expr
  30       | stmt if_stmt

  31  if_stmt : IF
  32          | IF expr elif_stmt
  33          | IF expr else_stmt

  34  elif_stmt : ELIF

  35  else_stmt : ELSE

  36  expr : ID
  37       | expr PLUS
  38       | LITERAL

  39  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (39)
	decls : .  (2)

	.  reduce 2

	program  goto 3
	decls  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	%entry% : '\001' program .  (39)

	.  reduce 39


state 4
	program : decls . EOF  (1)
	decls : decls . main_decl  (3)
	decls : decls . class_decl  (4)
	decls : decls . action_decl  (5)
	decls : decls . helper_decl  (6)
	decls : decls . attr_decl  (7)

	WHEN  shift 5
	LET  shift 6
	MAIN  shift 7
	ID  shift 8
	CONST  shift 9
	EOF  shift 10
	.  error

	main_decl  goto 11
	class_decl  goto 12
	action_decl  goto 13
	helper_decl  goto 14
	attr_decl  goto 15
	params_list  goto 16
	typ  goto 17
	param  goto 18


state 5
	action_decl : WHEN . DO  (11)

	DO  shift 19
	.  error


state 6
	class_decl : LET . BE class_block  (9)

	BE  shift 20
	.  error


state 7
	main_decl : MAIN . COLON stmt_block  (8)

	COLON  shift 21
	.  error


state 8
	helper_decl : ID . COLON  (12)

	COLON  shift 22
	.  error


state 9
	attr_decl : CONST . typ COLON  (13)


	typ  goto 23


state 10
	program : decls EOF .  (1)

	.  reduce 1


state 11
	decls : decls main_decl .  (3)

	.  reduce 3


state 12
	decls : decls class_decl .  (4)

	.  reduce 4


state 13
	decls : decls action_decl .  (5)

	.  reduce 5


state 14
	decls : decls helper_decl .  (6)

	.  reduce 6


state 15
	decls : decls attr_decl .  (7)

	.  reduce 7


state 16
	class_decl : params_list . args_list  (10)

	ID  shift 24
	.  error

	args_list  goto 25
	arg  goto 26


state 17
	typ : typ . prim_typ  (16)
	typ : typ . clas  (17)
	typ : typ . template_class  (18)
	param : typ . ID  (24)

	STICK  shift 27
	INT  shift 28
	BOOL  shift 29
	FLOAT  shift 30
	OBJECT  shift 31
	ID  shift 32
	.  error

	prim_typ  goto 33
	clas  goto 34
	template_class  goto 35


state 18
	params_list : param .  (25)

	.  reduce 25


state 19
	action_decl : WHEN DO .  (11)

	.  reduce 11


state 20
	class_decl : LET BE . class_block  (9)

	LPAREN  shift 36
	.  error

	class_block  goto 37


state 21
	main_decl : MAIN COLON . stmt_block  (8)

	LBRACE  shift 38
	.  error

	stmt_block  goto 39


state 22
	helper_decl : ID COLON .  (12)

	.  reduce 12


state 23
	attr_decl : CONST typ . COLON  (13)
	typ : typ . prim_typ  (16)
	typ : typ . clas  (17)
	typ : typ . template_class  (18)

	STICK  shift 27
	COLON  shift 40
	INT  shift 28
	BOOL  shift 29
	FLOAT  shift 30
	OBJECT  shift 31
	.  error

	prim_typ  goto 33
	clas  goto 34
	template_class  goto 35


state 24
	arg : ID . expr  (26)

	LITERAL  shift 41
	ID  shift 42
	.  error

	expr  goto 43


state 25
	class_decl : params_list args_list .  (10)

	.  reduce 10


state 26
	args_list : arg .  (27)

	.  reduce 27


state 27
	template_class : STICK . typ STICK  (23)


	typ  goto 44


state 28
	prim_typ : INT .  (19)

	.  reduce 19


state 29
	prim_typ : BOOL .  (21)

	.  reduce 21


state 30
	prim_typ : FLOAT .  (20)

	.  reduce 20


state 31
	clas : OBJECT .  (22)

	.  reduce 22


state 32
	param : typ ID .  (24)

	.  reduce 24


state 33
	typ : typ prim_typ .  (16)

	.  reduce 16


state 34
	typ : typ clas .  (17)

	.  reduce 17


state 35
	typ : typ template_class .  (18)

	.  reduce 18


state 36
	class_block : LPAREN . RPAREN  (15)

	RPAREN  shift 45
	.  error


state 37
	class_decl : LET BE class_block .  (9)

	.  reduce 9


state 38
	stmt_block : LBRACE . stmt RBRACE  (14)

	RETURN  shift 46
	.  error

	stmt  goto 47


state 39
	main_decl : MAIN COLON stmt_block .  (8)

	.  reduce 8


state 40
	attr_decl : CONST typ COLON .  (13)

	.  reduce 13


state 41
	expr : LITERAL .  (38)

	.  reduce 38


state 42
	expr : ID .  (36)

	.  reduce 36


state 43
	arg : ID expr .  (26)
	expr : expr . PLUS  (37)

	PLUS  shift 48
	WHEN  reduce 26
	LET  reduce 26
	MAIN  reduce 26
	ID  reduce 26
	CONST  reduce 26
	EOF  reduce 26


state 44
	typ : typ . prim_typ  (16)
	typ : typ . clas  (17)
	typ : typ . template_class  (18)
	template_class : STICK typ . STICK  (23)

	STICK  shift 49
	INT  shift 28
	BOOL  shift 29
	FLOAT  shift 30
	OBJECT  shift 31
	.  error

	prim_typ  goto 33
	clas  goto 34
	template_class  goto 35


state 45
	class_block : LPAREN RPAREN .  (15)

	.  reduce 15


state 46
	stmt : RETURN . expr  (28)

	LITERAL  shift 41
	ID  shift 42
	.  error

	expr  goto 50


state 47
	stmt_block : LBRACE stmt . RBRACE  (14)
	stmt : stmt . ID ASSIGN expr  (29)
	stmt : stmt . if_stmt  (30)

	RBRACE  shift 51
	IF  shift 52
	ID  shift 53
	.  error

	if_stmt  goto 54


state 48
	expr : expr PLUS .  (37)

	.  reduce 37


state 49
	template_class : STICK . typ STICK  (23)
	template_class : STICK typ STICK .  (23)

	.  reduce 23

	typ  goto 44


state 50
	stmt : RETURN expr .  (28)
	expr : expr . PLUS  (37)

	PLUS  shift 48
	RBRACE  reduce 28
	IF  reduce 28
	ID  reduce 28


state 51
	stmt_block : LBRACE stmt RBRACE .  (14)

	.  reduce 14


52: shift/reduce conflict (shift 42, reduce 31) on ID
state 52
	if_stmt : IF .  (31)
	if_stmt : IF . expr elif_stmt  (32)
	if_stmt : IF . expr else_stmt  (33)

	LITERAL  shift 41
	ID  shift 42
	RBRACE  reduce 31
	IF  reduce 31

	expr  goto 55


state 53
	stmt : stmt ID . ASSIGN expr  (29)

	ASSIGN  shift 56
	.  error


state 54
	stmt : stmt if_stmt .  (30)

	.  reduce 30


state 55
	if_stmt : IF expr . elif_stmt  (32)
	if_stmt : IF expr . else_stmt  (33)
	expr : expr . PLUS  (37)

	PLUS  shift 48
	ELIF  shift 57
	ELSE  shift 58
	.  error

	elif_stmt  goto 59
	else_stmt  goto 60


state 56
	stmt : stmt ID ASSIGN . expr  (29)

	LITERAL  shift 41
	ID  shift 42
	.  error

	expr  goto 61


state 57
	elif_stmt : ELIF .  (34)

	.  reduce 34


state 58
	else_stmt : ELSE .  (35)

	.  reduce 35


state 59
	if_stmt : IF expr elif_stmt .  (32)

	.  reduce 32


state 60
	if_stmt : IF expr else_stmt .  (33)

	.  reduce 33


state 61
	stmt : stmt ID ASSIGN expr .  (29)
	expr : expr . PLUS  (37)

	PLUS  shift 48
	RBRACE  reduce 29
	IF  reduce 29
	ID  reduce 29


State 52 contains 1 shift/reduce conflict.


62 terminals, 24 nonterminals
40 grammar rules, 62 states
