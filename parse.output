   0  $accept : %entry% $end

   1  program : decls EOF

   2  decls :
   3        | decls main_decl
   4        | decls class_decl
   5        | decls action_decl
   6        | decls helper_decl

   7  main_decl : MAIN COLON stmt_block

   8  class_decl : LET clas BE typ WITH COLON class_block
   9             | LET clas LPAREN params_list RPAREN BE typ LPAREN args_list RPAREN WITH COLON class_block

  10  action_decl : WHEN typ ID DO ACTIONID LPAREN params_list RPAREN COLON stmt_block

  11  helper_decl : ID LPAREN params_list RPAREN COLON expr
  12              | ID LPAREN params_list RPAREN COLON stmt_block

  13  attr_decl : const_opt typ_opt ID COLON expr
  14            | const_opt typ_opt ID COLON stmt_block

  15  const_opt :
  16            | CONST

  17  stmt_block : LBRACE stmt_block stmt RBRACE

  18  class_block : LPAREN attr_decl RPAREN

  19  typ_opt :
  20          | typ

  21  typ : typ prim_typ
  22      | typ clas
  23      | typ template_class

  24  prim_typ : INT
  25           | FLOAT
  26           | BOOL

  27  clas : OBJECT

  28  template_class : STICK typ STICK

  29  param : typ ID

  30  params_list :
  31              | param
  32              | params_list COMMA param

  33  arg : ID expr

  34  args_list :
  35            | arg
  36            | args_list COMMA arg

  37  stmt : expr
  38       | RETURN expr
  39       | if_stmt
  40       | for_stmt
  41       | while_stmt

  42  if_stmt : IF expr elif_stmt
  43          | IF expr else_stmt

  44  elif_stmt : ELIF

  45  else_stmt : ELSE

  46  for_stmt : FOR ID

  47  while_stmt : WHILE expr

  48  expr : expr PLUS expr
  49       | expr MINUS expr
  50       | expr TIMES expr
  51       | expr DIVIDE expr
  52       | expr EQ expr
  53       | expr NEQ expr
  54       | expr LT expr
  55       | expr LEQ expr
  56       | expr GT expr
  57       | expr GEQ expr
  58       | expr AND expr
  59       | expr OR expr
  60       | expr MOD expr
  61       | expr POWER expr
  62       | expr FLOOR expr
  63       | ID ASSIGN expr
  64       | NOT expr
  65       | LPAREN expr RPAREN
  66       | call_action
  67       | call_class
  68       | LITERAL
  69       | FLIT
  70       | BLIT
  71       | ID
  72       | NONE

  73  call_action : ID DO ACTIONID

  74  call_class : ID LPAREN args_list RPAREN

  75  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (75)
	decls : .  (2)

	.  reduce 2

	program  goto 3
	decls  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	%entry% : '\001' program .  (75)

	.  reduce 75


state 4
	program : decls . EOF  (1)
	decls : decls . main_decl  (3)
	decls : decls . class_decl  (4)
	decls : decls . action_decl  (5)
	decls : decls . helper_decl  (6)

	WHEN  shift 5
	LET  shift 6
	MAIN  shift 7
	ID  shift 8
	EOF  shift 9
	.  error

	main_decl  goto 10
	class_decl  goto 11
	action_decl  goto 12
	helper_decl  goto 13


state 5
	action_decl : WHEN . typ ID DO ACTIONID LPAREN params_list RPAREN COLON stmt_block  (10)


	typ  goto 14


state 6
	class_decl : LET . clas BE typ WITH COLON class_block  (8)
	class_decl : LET . clas LPAREN params_list RPAREN BE typ LPAREN args_list RPAREN WITH COLON class_block  (9)

	OBJECT  shift 15
	.  error

	clas  goto 16


state 7
	main_decl : MAIN . COLON stmt_block  (7)

	COLON  shift 17
	.  error


state 8
	helper_decl : ID . LPAREN params_list RPAREN COLON expr  (11)
	helper_decl : ID . LPAREN params_list RPAREN COLON stmt_block  (12)

	LPAREN  shift 18
	.  error


state 9
	program : decls EOF .  (1)

	.  reduce 1


state 10
	decls : decls main_decl .  (3)

	.  reduce 3


state 11
	decls : decls class_decl .  (4)

	.  reduce 4


state 12
	decls : decls action_decl .  (5)

	.  reduce 5


state 13
	decls : decls helper_decl .  (6)

	.  reduce 6


state 14
	action_decl : WHEN typ . ID DO ACTIONID LPAREN params_list RPAREN COLON stmt_block  (10)
	typ : typ . prim_typ  (21)
	typ : typ . clas  (22)
	typ : typ . template_class  (23)

	STICK  shift 19
	INT  shift 20
	BOOL  shift 21
	FLOAT  shift 22
	OBJECT  shift 15
	ID  shift 23
	.  error

	clas  goto 24
	prim_typ  goto 25
	template_class  goto 26


state 15
	clas : OBJECT .  (27)

	.  reduce 27


state 16
	class_decl : LET clas . BE typ WITH COLON class_block  (8)
	class_decl : LET clas . LPAREN params_list RPAREN BE typ LPAREN args_list RPAREN WITH COLON class_block  (9)

	LPAREN  shift 27
	BE  shift 28
	.  error


state 17
	main_decl : MAIN COLON . stmt_block  (7)

	LBRACE  shift 29
	.  error

	stmt_block  goto 30


state 18
	helper_decl : ID LPAREN . params_list RPAREN COLON expr  (11)
	helper_decl : ID LPAREN . params_list RPAREN COLON stmt_block  (12)
	params_list : .  (30)

	.  reduce 30

	typ  goto 31
	params_list  goto 32
	param  goto 33


state 19
	template_class : STICK . typ STICK  (28)


	typ  goto 34


state 20
	prim_typ : INT .  (24)

	.  reduce 24


state 21
	prim_typ : BOOL .  (26)

	.  reduce 26


state 22
	prim_typ : FLOAT .  (25)

	.  reduce 25


state 23
	action_decl : WHEN typ ID . DO ACTIONID LPAREN params_list RPAREN COLON stmt_block  (10)

	DO  shift 35
	.  error


state 24
	typ : typ clas .  (22)

	.  reduce 22


state 25
	typ : typ prim_typ .  (21)

	.  reduce 21


state 26
	typ : typ template_class .  (23)

	.  reduce 23


state 27
	class_decl : LET clas LPAREN . params_list RPAREN BE typ LPAREN args_list RPAREN WITH COLON class_block  (9)
	params_list : .  (30)

	.  reduce 30

	typ  goto 31
	params_list  goto 36
	param  goto 33


state 28
	class_decl : LET clas BE . typ WITH COLON class_block  (8)


	typ  goto 37


state 29
	stmt_block : LBRACE . stmt_block stmt RBRACE  (17)

	LBRACE  shift 29
	.  error

	stmt_block  goto 38


state 30
	main_decl : MAIN COLON stmt_block .  (7)

	.  reduce 7


state 31
	typ : typ . prim_typ  (21)
	typ : typ . clas  (22)
	typ : typ . template_class  (23)
	param : typ . ID  (29)

	STICK  shift 19
	INT  shift 20
	BOOL  shift 21
	FLOAT  shift 22
	OBJECT  shift 15
	ID  shift 39
	.  error

	clas  goto 24
	prim_typ  goto 25
	template_class  goto 26


state 32
	helper_decl : ID LPAREN params_list . RPAREN COLON expr  (11)
	helper_decl : ID LPAREN params_list . RPAREN COLON stmt_block  (12)
	params_list : params_list . COMMA param  (32)

	RPAREN  shift 40
	COMMA  shift 41
	.  error


state 33
	params_list : param .  (31)

	.  reduce 31


state 34
	typ : typ . prim_typ  (21)
	typ : typ . clas  (22)
	typ : typ . template_class  (23)
	template_class : STICK typ . STICK  (28)

	STICK  shift 42
	INT  shift 20
	BOOL  shift 21
	FLOAT  shift 22
	OBJECT  shift 15
	.  error

	clas  goto 24
	prim_typ  goto 25
	template_class  goto 26


state 35
	action_decl : WHEN typ ID DO . ACTIONID LPAREN params_list RPAREN COLON stmt_block  (10)

	ACTIONID  shift 43
	.  error


state 36
	class_decl : LET clas LPAREN params_list . RPAREN BE typ LPAREN args_list RPAREN WITH COLON class_block  (9)
	params_list : params_list . COMMA param  (32)

	RPAREN  shift 44
	COMMA  shift 41
	.  error


state 37
	class_decl : LET clas BE typ . WITH COLON class_block  (8)
	typ : typ . prim_typ  (21)
	typ : typ . clas  (22)
	typ : typ . template_class  (23)

	STICK  shift 19
	INT  shift 20
	BOOL  shift 21
	FLOAT  shift 22
	OBJECT  shift 15
	WITH  shift 45
	.  error

	clas  goto 24
	prim_typ  goto 25
	template_class  goto 26


state 38
	stmt_block : LBRACE stmt_block . stmt RBRACE  (17)

	LPAREN  shift 46
	NOT  shift 47
	RETURN  shift 48
	IF  shift 49
	FOR  shift 50
	WHILE  shift 51
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 57
	stmt  goto 58
	if_stmt  goto 59
	for_stmt  goto 60
	while_stmt  goto 61
	call_action  goto 62
	call_class  goto 63


state 39
	param : typ ID .  (29)

	.  reduce 29


state 40
	helper_decl : ID LPAREN params_list RPAREN . COLON expr  (11)
	helper_decl : ID LPAREN params_list RPAREN . COLON stmt_block  (12)

	COLON  shift 64
	.  error


state 41
	params_list : params_list COMMA . param  (32)


	typ  goto 31
	param  goto 65


state 42
	template_class : STICK . typ STICK  (28)
	template_class : STICK typ STICK .  (28)

	.  reduce 28

	typ  goto 34


state 43
	action_decl : WHEN typ ID DO ACTIONID . LPAREN params_list RPAREN COLON stmt_block  (10)

	LPAREN  shift 66
	.  error


state 44
	class_decl : LET clas LPAREN params_list RPAREN . BE typ LPAREN args_list RPAREN WITH COLON class_block  (9)

	BE  shift 67
	.  error


state 45
	class_decl : LET clas BE typ WITH . COLON class_block  (8)

	COLON  shift 68
	.  error


state 46
	expr : LPAREN . expr RPAREN  (65)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 69
	call_action  goto 62
	call_class  goto 63


state 47
	expr : NOT . expr  (64)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 70
	call_action  goto 62
	call_class  goto 63


state 48
	stmt : RETURN . expr  (38)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 71
	call_action  goto 62
	call_class  goto 63


state 49
	if_stmt : IF . expr elif_stmt  (42)
	if_stmt : IF . expr else_stmt  (43)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 72
	call_action  goto 62
	call_class  goto 63


state 50
	for_stmt : FOR . ID  (46)

	ID  shift 73
	.  error


state 51
	while_stmt : WHILE . expr  (47)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 74
	call_action  goto 62
	call_class  goto 63


state 52
	expr : NONE .  (72)

	.  reduce 72


state 53
	expr : LITERAL .  (68)

	.  reduce 68


state 54
	expr : BLIT .  (70)

	.  reduce 70


state 55
	expr : ID . ASSIGN expr  (63)
	expr : ID .  (71)
	call_action : ID . DO ACTIONID  (73)
	call_class : ID . LPAREN args_list RPAREN  (74)

	LPAREN  shift 75
	ASSIGN  shift 76
	DO  shift 77
	RPAREN  reduce 71
	RBRACE  reduce 71
	COMMA  reduce 71
	PLUS  reduce 71
	MINUS  reduce 71
	TIMES  reduce 71
	DIVIDE  reduce 71
	MOD  reduce 71
	POWER  reduce 71
	FLOOR  reduce 71
	EQ  reduce 71
	NEQ  reduce 71
	LT  reduce 71
	LEQ  reduce 71
	GT  reduce 71
	GEQ  reduce 71
	AND  reduce 71
	OR  reduce 71
	ELIF  reduce 71
	ELSE  reduce 71
	WHEN  reduce 71
	LET  reduce 71
	MAIN  reduce 71
	ID  reduce 71
	EOF  reduce 71


state 56
	expr : FLIT .  (69)

	.  reduce 69


state 57
	stmt : expr .  (37)
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	AND  shift 91
	OR  shift 92
	RBRACE  reduce 37


state 58
	stmt_block : LBRACE stmt_block stmt . RBRACE  (17)

	RBRACE  shift 93
	.  error


state 59
	stmt : if_stmt .  (39)

	.  reduce 39


state 60
	stmt : for_stmt .  (40)

	.  reduce 40


state 61
	stmt : while_stmt .  (41)

	.  reduce 41


state 62
	expr : call_action .  (66)

	.  reduce 66


state 63
	expr : call_class .  (67)

	.  reduce 67


state 64
	helper_decl : ID LPAREN params_list RPAREN COLON . expr  (11)
	helper_decl : ID LPAREN params_list RPAREN COLON . stmt_block  (12)

	LPAREN  shift 46
	LBRACE  shift 29
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	stmt_block  goto 94
	expr  goto 95
	call_action  goto 62
	call_class  goto 63


state 65
	params_list : params_list COMMA param .  (32)

	.  reduce 32


state 66
	action_decl : WHEN typ ID DO ACTIONID LPAREN . params_list RPAREN COLON stmt_block  (10)
	params_list : .  (30)

	.  reduce 30

	typ  goto 31
	params_list  goto 96
	param  goto 33


state 67
	class_decl : LET clas LPAREN params_list RPAREN BE . typ LPAREN args_list RPAREN WITH COLON class_block  (9)


	typ  goto 97


state 68
	class_decl : LET clas BE typ WITH COLON . class_block  (8)

	LPAREN  shift 98
	.  error

	class_block  goto 99


state 69
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)
	expr : LPAREN expr . RPAREN  (65)

	RPAREN  shift 100
	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	AND  shift 91
	OR  shift 92
	.  error


state 70
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)
	expr : NOT expr .  (64)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	AND  shift 91
	OR  shift 92
	RPAREN  reduce 64
	RBRACE  reduce 64
	COMMA  reduce 64
	ELIF  reduce 64
	ELSE  reduce 64
	WHEN  reduce 64
	LET  reduce 64
	MAIN  reduce 64
	ID  reduce 64
	EOF  reduce 64


state 71
	stmt : RETURN expr .  (38)
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	AND  shift 91
	OR  shift 92
	RBRACE  reduce 38


state 72
	if_stmt : IF expr . elif_stmt  (42)
	if_stmt : IF expr . else_stmt  (43)
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	AND  shift 91
	OR  shift 92
	ELIF  shift 101
	ELSE  shift 102
	.  error

	elif_stmt  goto 103
	else_stmt  goto 104


state 73
	for_stmt : FOR ID .  (46)

	.  reduce 46


state 74
	while_stmt : WHILE expr .  (47)
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	AND  shift 91
	OR  shift 92
	RBRACE  reduce 47


state 75
	call_class : ID LPAREN . args_list RPAREN  (74)
	args_list : .  (34)

	ID  shift 105
	RPAREN  reduce 34
	COMMA  reduce 34

	args_list  goto 106
	arg  goto 107


state 76
	expr : ID ASSIGN . expr  (63)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 108
	call_action  goto 62
	call_class  goto 63


state 77
	call_action : ID DO . ACTIONID  (73)

	ACTIONID  shift 109
	.  error


state 78
	expr : expr PLUS . expr  (48)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 110
	call_action  goto 62
	call_class  goto 63


state 79
	expr : expr MINUS . expr  (49)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 111
	call_action  goto 62
	call_class  goto 63


state 80
	expr : expr TIMES . expr  (50)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 112
	call_action  goto 62
	call_class  goto 63


state 81
	expr : expr DIVIDE . expr  (51)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 113
	call_action  goto 62
	call_class  goto 63


state 82
	expr : expr MOD . expr  (60)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 114
	call_action  goto 62
	call_class  goto 63


state 83
	expr : expr POWER . expr  (61)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 115
	call_action  goto 62
	call_class  goto 63


state 84
	expr : expr FLOOR . expr  (62)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 116
	call_action  goto 62
	call_class  goto 63


state 85
	expr : expr EQ . expr  (52)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 117
	call_action  goto 62
	call_class  goto 63


state 86
	expr : expr NEQ . expr  (53)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 118
	call_action  goto 62
	call_class  goto 63


state 87
	expr : expr LT . expr  (54)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 119
	call_action  goto 62
	call_class  goto 63


state 88
	expr : expr LEQ . expr  (55)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 120
	call_action  goto 62
	call_class  goto 63


state 89
	expr : expr GT . expr  (56)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 121
	call_action  goto 62
	call_class  goto 63


state 90
	expr : expr GEQ . expr  (57)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 122
	call_action  goto 62
	call_class  goto 63


state 91
	expr : expr AND . expr  (58)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 123
	call_action  goto 62
	call_class  goto 63


state 92
	expr : expr OR . expr  (59)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 124
	call_action  goto 62
	call_class  goto 63


state 93
	stmt_block : LBRACE stmt_block stmt RBRACE .  (17)

	.  reduce 17


state 94
	helper_decl : ID LPAREN params_list RPAREN COLON stmt_block .  (12)

	.  reduce 12


state 95
	helper_decl : ID LPAREN params_list RPAREN COLON expr .  (11)
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	AND  shift 91
	OR  shift 92
	WHEN  reduce 11
	LET  reduce 11
	MAIN  reduce 11
	ID  reduce 11
	EOF  reduce 11


state 96
	action_decl : WHEN typ ID DO ACTIONID LPAREN params_list . RPAREN COLON stmt_block  (10)
	params_list : params_list . COMMA param  (32)

	RPAREN  shift 125
	COMMA  shift 41
	.  error


state 97
	class_decl : LET clas LPAREN params_list RPAREN BE typ . LPAREN args_list RPAREN WITH COLON class_block  (9)
	typ : typ . prim_typ  (21)
	typ : typ . clas  (22)
	typ : typ . template_class  (23)

	LPAREN  shift 126
	STICK  shift 19
	INT  shift 20
	BOOL  shift 21
	FLOAT  shift 22
	OBJECT  shift 15
	.  error

	clas  goto 24
	prim_typ  goto 25
	template_class  goto 26


state 98
	class_block : LPAREN . attr_decl RPAREN  (18)
	const_opt : .  (15)

	CONST  shift 127
	ID  reduce 15

	attr_decl  goto 128
	const_opt  goto 129


state 99
	class_decl : LET clas BE typ WITH COLON class_block .  (8)

	.  reduce 8


state 100
	expr : LPAREN expr RPAREN .  (65)

	.  reduce 65


state 101
	elif_stmt : ELIF .  (44)

	.  reduce 44


state 102
	else_stmt : ELSE .  (45)

	.  reduce 45


state 103
	if_stmt : IF expr elif_stmt .  (42)

	.  reduce 42


state 104
	if_stmt : IF expr else_stmt .  (43)

	.  reduce 43


state 105
	arg : ID . expr  (33)

	LPAREN  shift 46
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	expr  goto 130
	call_action  goto 62
	call_class  goto 63


state 106
	args_list : args_list . COMMA arg  (36)
	call_class : ID LPAREN args_list . RPAREN  (74)

	RPAREN  shift 131
	COMMA  shift 132
	.  error


state 107
	args_list : arg .  (35)

	.  reduce 35


state 108
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)
	expr : ID ASSIGN expr .  (63)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	AND  shift 91
	OR  shift 92
	RPAREN  reduce 63
	RBRACE  reduce 63
	COMMA  reduce 63
	ELIF  reduce 63
	ELSE  reduce 63
	WHEN  reduce 63
	LET  reduce 63
	MAIN  reduce 63
	ID  reduce 63
	EOF  reduce 63


state 109
	call_action : ID DO ACTIONID .  (73)

	.  reduce 73


state 110
	expr : expr . PLUS expr  (48)
	expr : expr PLUS expr .  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	RPAREN  reduce 48
	RBRACE  reduce 48
	COMMA  reduce 48
	PLUS  reduce 48
	MINUS  reduce 48
	EQ  reduce 48
	NEQ  reduce 48
	LT  reduce 48
	LEQ  reduce 48
	GT  reduce 48
	GEQ  reduce 48
	AND  reduce 48
	OR  reduce 48
	ELIF  reduce 48
	ELSE  reduce 48
	WHEN  reduce 48
	LET  reduce 48
	MAIN  reduce 48
	ID  reduce 48
	EOF  reduce 48


state 111
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr MINUS expr .  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	RPAREN  reduce 49
	RBRACE  reduce 49
	COMMA  reduce 49
	PLUS  reduce 49
	MINUS  reduce 49
	EQ  reduce 49
	NEQ  reduce 49
	LT  reduce 49
	LEQ  reduce 49
	GT  reduce 49
	GEQ  reduce 49
	AND  reduce 49
	OR  reduce 49
	ELIF  reduce 49
	ELSE  reduce 49
	WHEN  reduce 49
	LET  reduce 49
	MAIN  reduce 49
	ID  reduce 49
	EOF  reduce 49


state 112
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr TIMES expr .  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	POWER  shift 83
	RPAREN  reduce 50
	RBRACE  reduce 50
	COMMA  reduce 50
	PLUS  reduce 50
	MINUS  reduce 50
	TIMES  reduce 50
	DIVIDE  reduce 50
	MOD  reduce 50
	FLOOR  reduce 50
	EQ  reduce 50
	NEQ  reduce 50
	LT  reduce 50
	LEQ  reduce 50
	GT  reduce 50
	GEQ  reduce 50
	AND  reduce 50
	OR  reduce 50
	ELIF  reduce 50
	ELSE  reduce 50
	WHEN  reduce 50
	LET  reduce 50
	MAIN  reduce 50
	ID  reduce 50
	EOF  reduce 50


state 113
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr DIVIDE expr .  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	POWER  shift 83
	RPAREN  reduce 51
	RBRACE  reduce 51
	COMMA  reduce 51
	PLUS  reduce 51
	MINUS  reduce 51
	TIMES  reduce 51
	DIVIDE  reduce 51
	MOD  reduce 51
	FLOOR  reduce 51
	EQ  reduce 51
	NEQ  reduce 51
	LT  reduce 51
	LEQ  reduce 51
	GT  reduce 51
	GEQ  reduce 51
	AND  reduce 51
	OR  reduce 51
	ELIF  reduce 51
	ELSE  reduce 51
	WHEN  reduce 51
	LET  reduce 51
	MAIN  reduce 51
	ID  reduce 51
	EOF  reduce 51


state 114
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr MOD expr .  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	TIMES  shift 80
	DIVIDE  shift 81
	POWER  shift 83
	FLOOR  shift 84
	RPAREN  reduce 60
	RBRACE  reduce 60
	COMMA  reduce 60
	PLUS  reduce 60
	MINUS  reduce 60
	MOD  reduce 60
	EQ  reduce 60
	NEQ  reduce 60
	LT  reduce 60
	LEQ  reduce 60
	GT  reduce 60
	GEQ  reduce 60
	AND  reduce 60
	OR  reduce 60
	ELIF  reduce 60
	ELSE  reduce 60
	WHEN  reduce 60
	LET  reduce 60
	MAIN  reduce 60
	ID  reduce 60
	EOF  reduce 60


state 115
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr POWER expr .  (61)
	expr : expr . FLOOR expr  (62)

	.  reduce 61


state 116
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)
	expr : expr FLOOR expr .  (62)

	TIMES  shift 80
	DIVIDE  shift 81
	POWER  shift 83
	RPAREN  reduce 62
	RBRACE  reduce 62
	COMMA  reduce 62
	PLUS  reduce 62
	MINUS  reduce 62
	MOD  reduce 62
	FLOOR  reduce 62
	EQ  reduce 62
	NEQ  reduce 62
	LT  reduce 62
	LEQ  reduce 62
	GT  reduce 62
	GEQ  reduce 62
	AND  reduce 62
	OR  reduce 62
	ELIF  reduce 62
	ELSE  reduce 62
	WHEN  reduce 62
	LET  reduce 62
	MAIN  reduce 62
	ID  reduce 62
	EOF  reduce 62


state 117
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr EQ expr .  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	RPAREN  reduce 52
	RBRACE  reduce 52
	COMMA  reduce 52
	EQ  reduce 52
	NEQ  reduce 52
	AND  reduce 52
	OR  reduce 52
	ELIF  reduce 52
	ELSE  reduce 52
	WHEN  reduce 52
	LET  reduce 52
	MAIN  reduce 52
	ID  reduce 52
	EOF  reduce 52


state 118
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr NEQ expr .  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	RPAREN  reduce 53
	RBRACE  reduce 53
	COMMA  reduce 53
	EQ  reduce 53
	NEQ  reduce 53
	AND  reduce 53
	OR  reduce 53
	ELIF  reduce 53
	ELSE  reduce 53
	WHEN  reduce 53
	LET  reduce 53
	MAIN  reduce 53
	ID  reduce 53
	EOF  reduce 53


state 119
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr LT expr .  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	RPAREN  reduce 54
	RBRACE  reduce 54
	COMMA  reduce 54
	EQ  reduce 54
	NEQ  reduce 54
	LT  reduce 54
	LEQ  reduce 54
	GT  reduce 54
	GEQ  reduce 54
	AND  reduce 54
	OR  reduce 54
	ELIF  reduce 54
	ELSE  reduce 54
	WHEN  reduce 54
	LET  reduce 54
	MAIN  reduce 54
	ID  reduce 54
	EOF  reduce 54


state 120
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr LEQ expr .  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	RPAREN  reduce 55
	RBRACE  reduce 55
	COMMA  reduce 55
	EQ  reduce 55
	NEQ  reduce 55
	LT  reduce 55
	LEQ  reduce 55
	GT  reduce 55
	GEQ  reduce 55
	AND  reduce 55
	OR  reduce 55
	ELIF  reduce 55
	ELSE  reduce 55
	WHEN  reduce 55
	LET  reduce 55
	MAIN  reduce 55
	ID  reduce 55
	EOF  reduce 55


state 121
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr GT expr .  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	RPAREN  reduce 56
	RBRACE  reduce 56
	COMMA  reduce 56
	EQ  reduce 56
	NEQ  reduce 56
	LT  reduce 56
	LEQ  reduce 56
	GT  reduce 56
	GEQ  reduce 56
	AND  reduce 56
	OR  reduce 56
	ELIF  reduce 56
	ELSE  reduce 56
	WHEN  reduce 56
	LET  reduce 56
	MAIN  reduce 56
	ID  reduce 56
	EOF  reduce 56


state 122
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr GEQ expr .  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	RPAREN  reduce 57
	RBRACE  reduce 57
	COMMA  reduce 57
	EQ  reduce 57
	NEQ  reduce 57
	LT  reduce 57
	LEQ  reduce 57
	GT  reduce 57
	GEQ  reduce 57
	AND  reduce 57
	OR  reduce 57
	ELIF  reduce 57
	ELSE  reduce 57
	WHEN  reduce 57
	LET  reduce 57
	MAIN  reduce 57
	ID  reduce 57
	EOF  reduce 57


state 123
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr AND expr .  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	RPAREN  reduce 58
	RBRACE  reduce 58
	COMMA  reduce 58
	AND  reduce 58
	OR  reduce 58
	ELIF  reduce 58
	ELSE  reduce 58
	WHEN  reduce 58
	LET  reduce 58
	MAIN  reduce 58
	ID  reduce 58
	EOF  reduce 58


state 124
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr OR expr .  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	AND  shift 91
	RPAREN  reduce 59
	RBRACE  reduce 59
	COMMA  reduce 59
	OR  reduce 59
	ELIF  reduce 59
	ELSE  reduce 59
	WHEN  reduce 59
	LET  reduce 59
	MAIN  reduce 59
	ID  reduce 59
	EOF  reduce 59


state 125
	action_decl : WHEN typ ID DO ACTIONID LPAREN params_list RPAREN . COLON stmt_block  (10)

	COLON  shift 133
	.  error


state 126
	class_decl : LET clas LPAREN params_list RPAREN BE typ LPAREN . args_list RPAREN WITH COLON class_block  (9)
	args_list : .  (34)

	ID  shift 105
	RPAREN  reduce 34
	COMMA  reduce 34

	args_list  goto 134
	arg  goto 107


state 127
	const_opt : CONST .  (16)

	.  reduce 16


state 128
	class_block : LPAREN attr_decl . RPAREN  (18)

	RPAREN  shift 135
	.  error


state 129
	attr_decl : const_opt . typ_opt ID COLON expr  (13)
	attr_decl : const_opt . typ_opt ID COLON stmt_block  (14)
	typ_opt : .  (19)

	.  reduce 19

	typ  goto 136
	typ_opt  goto 137


state 130
	arg : ID expr .  (33)
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	AND  shift 91
	OR  shift 92
	RPAREN  reduce 33
	COMMA  reduce 33


state 131
	call_class : ID LPAREN args_list RPAREN .  (74)

	.  reduce 74


state 132
	args_list : args_list COMMA . arg  (36)

	ID  shift 105
	.  error

	arg  goto 138


state 133
	action_decl : WHEN typ ID DO ACTIONID LPAREN params_list RPAREN COLON . stmt_block  (10)

	LBRACE  shift 29
	.  error

	stmt_block  goto 139


state 134
	class_decl : LET clas LPAREN params_list RPAREN BE typ LPAREN args_list . RPAREN WITH COLON class_block  (9)
	args_list : args_list . COMMA arg  (36)

	RPAREN  shift 140
	COMMA  shift 132
	.  error


state 135
	class_block : LPAREN attr_decl RPAREN .  (18)

	.  reduce 18


state 136
	typ_opt : typ .  (20)
	typ : typ . prim_typ  (21)
	typ : typ . clas  (22)
	typ : typ . template_class  (23)

	STICK  shift 19
	INT  shift 20
	BOOL  shift 21
	FLOAT  shift 22
	OBJECT  shift 15
	ID  reduce 20

	clas  goto 24
	prim_typ  goto 25
	template_class  goto 26


state 137
	attr_decl : const_opt typ_opt . ID COLON expr  (13)
	attr_decl : const_opt typ_opt . ID COLON stmt_block  (14)

	ID  shift 141
	.  error


state 138
	args_list : args_list COMMA arg .  (36)

	.  reduce 36


state 139
	action_decl : WHEN typ ID DO ACTIONID LPAREN params_list RPAREN COLON stmt_block .  (10)

	.  reduce 10


state 140
	class_decl : LET clas LPAREN params_list RPAREN BE typ LPAREN args_list RPAREN . WITH COLON class_block  (9)

	WITH  shift 142
	.  error


state 141
	attr_decl : const_opt typ_opt ID . COLON expr  (13)
	attr_decl : const_opt typ_opt ID . COLON stmt_block  (14)

	COLON  shift 143
	.  error


state 142
	class_decl : LET clas LPAREN params_list RPAREN BE typ LPAREN args_list RPAREN WITH . COLON class_block  (9)

	COLON  shift 144
	.  error


state 143
	attr_decl : const_opt typ_opt ID COLON . expr  (13)
	attr_decl : const_opt typ_opt ID COLON . stmt_block  (14)

	LPAREN  shift 46
	LBRACE  shift 29
	NOT  shift 47
	NONE  shift 52
	LITERAL  shift 53
	BLIT  shift 54
	ID  shift 55
	FLIT  shift 56
	.  error

	stmt_block  goto 145
	expr  goto 146
	call_action  goto 62
	call_class  goto 63


state 144
	class_decl : LET clas LPAREN params_list RPAREN BE typ LPAREN args_list RPAREN WITH COLON . class_block  (9)

	LPAREN  shift 98
	.  error

	class_block  goto 147


state 145
	attr_decl : const_opt typ_opt ID COLON stmt_block .  (14)

	.  reduce 14


state 146
	attr_decl : const_opt typ_opt ID COLON expr .  (13)
	expr : expr . PLUS expr  (48)
	expr : expr . MINUS expr  (49)
	expr : expr . TIMES expr  (50)
	expr : expr . DIVIDE expr  (51)
	expr : expr . EQ expr  (52)
	expr : expr . NEQ expr  (53)
	expr : expr . LT expr  (54)
	expr : expr . LEQ expr  (55)
	expr : expr . GT expr  (56)
	expr : expr . GEQ expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . OR expr  (59)
	expr : expr . MOD expr  (60)
	expr : expr . POWER expr  (61)
	expr : expr . FLOOR expr  (62)

	PLUS  shift 78
	MINUS  shift 79
	TIMES  shift 80
	DIVIDE  shift 81
	MOD  shift 82
	POWER  shift 83
	FLOOR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	AND  shift 91
	OR  shift 92
	RPAREN  reduce 13


state 147
	class_decl : LET clas LPAREN params_list RPAREN BE typ LPAREN args_list RPAREN WITH COLON class_block .  (9)

	.  reduce 9


63 terminals, 30 nonterminals
76 grammar rules, 148 states
